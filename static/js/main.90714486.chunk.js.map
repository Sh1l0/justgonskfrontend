{"version":3,"sources":["components/Card.js","components/List.js","components/Map.js","components/Menu.js","components/Gamburger.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","Component","List","fetch","mode","headers","Content-Type","then","response","JSON","stringify","val","console","log","Card_Card","Map","Menu","_this","click","e","target","parentNode","classList","remove","changeParentState","state","visible","nextProps","nextState","setState","react_router_dom","onClick","to","react_router","path","exact","component","Gamburger","src","width","height","alt","onChange","Header","Gamburger_Gamburger","Footer","href","App","stateToggle","isMenuVisible","Header_Header","Menu_Menu","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90714486.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"card paper\">\n        <div className=\"big\">Название события</div>\n        <div className=\"small\">24.03.2001</div>\n        <div className=\"madium\">Lorem ipsum dolor sit amet,\n         consectetur adipisicing elit. Obcaecati li laboriosam\n         in tempora dolorum itaque sequi rerum! Fugiat voluptatibus\n          at aliquid.</div>\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Card from './Card';\n\nexport default class List extends Component {\n\n  componentDidMount() {\n    fetch('https://kudago.com/public-api/v1.2/events/?location=nsk', { mode: 'no-cors', headers: {'Content-Type': 'application/json'}}).then(response => {\n      return JSON.stringify(response);\n    }).then(val => {\n      console.log(val);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n      <Card />\n      <Card />\n      <Card />\n      <Card />\n      <Card />\n      <Card />\n      <Card />\n      <Card />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Map extends Component {\n\n  render() {\n    return (\n      <div>\n        Здесь будет карта\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport List from \"./List\";\nimport Map from \"./Map\";\n\nexport default class Menu extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      visible: props.visible,\n      className: 'menu__background'\n    };\n\n  }\n\n  click = e => {\n\n    e.target.parentNode.parentNode.parentNode.classList.remove('visible');\n    this.props.changeParentState();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    if(nextProps.visible !== this.state.visible) {\n      this.setState({visible: nextProps.visible});\n      if(this.state.visible) {\n        this.setState({className: 'menu__background visible'});\n      }\n      else {\n        this.setState({className: 'menu__background'});\n      }\n\n\n      return true;\n    }\n    else return false;\n  }\n\n\n\n  render() {\n\n    return (\n      <Router>\n      <div className={this.state.className} onClick={this.click}>\n        <div className='nav paper'>\n            <ul className='nav__list'>\n              <li onClick={this.click}>\n                <Link className=\"nav__link\" to=\"/\">Список</Link>\n              </li>\n              <li onClick={this.click}>\n                <Link className=\"nav__link\" to=\"/map/\">Карта</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/\" exact component={List} />\n            <Route path=\"/map\" component={Map} />\n          </Switch>\n        </div>\n\n      </Router>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Gamburger extends Component {\n\n  render() {\n    return (\n      <img src=\"/hamburger.png\" width='80' height='80' className=\"hamburger\" alt=\"Меню\" onClick={this.props.onChange}/>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Gamburger from './Gamburger';\n\nexport default class Header extends Component {\n\n  render() {\n    return (\n      <div className=\"header paper\">\n        <div className=\"center\">\n          <Gamburger onChange={this.props.onChange}/>\n          <div className=\"logo\">JG</div>\n          <div className=\"medium\">Регистрация</div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n\n  render() {\n    return (\n      <div className=\"footer paper\">\n        <div className=\"center\">\n          <div className=\"small\">Наша почта:\n          <a href=\"mailto:email@mail.mal\" className=\"mail\">email@mail.mal</a>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Menu from './components/Menu';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isMenuVisible: true\n    }\n  }\n\n  stateToggle = () => {\n    this.setState({isMenuVisible: !this.state.isMenuVisible});\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"page\">\n      <Header onChange={this.stateToggle}/>\n      <Menu visible={this.state.isMenuVisible} changeParentState={this.stateToggle}/>\n      <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}