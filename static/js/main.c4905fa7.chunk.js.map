{"version":3,"sources":["components/Card.js","components/List.js","components/Gamburger.js","components/Menu.js","components/Header.js","components/Footer.js","components/Map.js","components/Event.js","App.js","serviceWorker.js","index.js"],"names":["MyCard","react_default","a","createElement","Card_default","className","CardHeader_default","title","this","props","subheader","date","id","CardMedia_default","image","src","CardContent_default","Typography_default","component","description","CardActions_default","react_router_dom","to","Button_default","size","color","Component","MyList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","list","_this2","fetch","concat","process","mode","then","res","json","val","results","console","log","i","cards","map","Card_MyCard","key","images","toUpperCase","dates","start_Date","replace","setState","Menu","left","toggleDrawer","open","List_default","text","index","ListItem_default","button","ListItemText_default","primary","Menu_default","onClick","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","Header","AppBar_default","position","Toolbar_default","IconButton_default","aria-label","Menu_Menu","variant","Footer","href","Map","Event","App","stateToggle","isMenuVisible","Header_Header","react_router","path","exact","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4905fa7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\n\n/*<div className=\"card paper\">\n  <img src={this.props.src} width='200' alt=\"\" className='image'/>\n  <div className=\"big\">{this.props.title || 'Загрузка...'}</div>\n  <div className=\"small\">{this.props.date}</div>\n  <div className=\"medium\">{this.props.description}</div>\n</div>*/\n\nexport default class MyCard extends Component {\n  render() {\n    return (\n      <Card className=\"card\">\n        <CardHeader\n          title={this.props.title || 'Загрузка...'}\n          subheader={this.props.date || null}\n        />\n        {\n         this.props.id &&\n          <CardMedia\n            className=\"image\"\n            image={this.props.src}\n            title=\"Paella dish\"\n          />\n        }\n        {\n          this.props.id &&\n          <CardContent>\n            <Typography component=\"p\">\n              {this.props.description}\n            </Typography>\n          </CardContent>\n        }\n        {\n          this.props.id &&\n          <CardActions>\n            <Link to={'/event/' + this.props.id} className='no-style'>\n              <Button size=\"small\" color=\"primary\">\n                Открыть полностью\n              </Button>\n            </Link>\n          </CardActions>\n        }\n      </Card>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport MyCard from './Card';\n\n\nexport default class MyList extends Component {\n  constructor() {\n    super();\n    this.state = {};\n\n\n  /*  const options = {\n        method: 'GET',\n        //headers: new Headers({'Content-Type': 'application/json'}),\n        mode: 'no-cors'\n      };\n    fetch('https://justgonsk.azurewebsites.net/api/Test', options).then(response => {\n      return response.json();\n    }).then(val => {\n      list = val.results;\n      console.log(list);\n      let i = 0;\n      let cards = list.map((val) => {\n        return  <Card\n                  key={i++}\n                  src={val.images[0].image}\n                  title={val.title.toUpperCase()}\n                  date={val.dates[0].start_date ? val.dates[0].start_date.replace(/\\-/g, '.'): null}\n                  description={val.description.replace('<p>', '').replace('</p>', '')}\n                />\n      })\n      this.setState({cards: cards});\n    */\n\n  }\n\n  componentDidMount() {\n    let list;\n    fetch(`${process.env.REACT_APP_URL}/api/Test`,{//public-api/v1.4/events/?lang=ru&fields=dates,short_title,images,title,description,id&expand=dates&location=nsk&actual_since=1444385206&actual_until=1644385405&is_free=true`, { //https://justgonskapitest.azurewebsites.net    ${process.env.REACT_APP_URL}/api/Test\n      mode: 'cors'\n    }).then(res => {\n      return res.json()\n    }).then(val => {\n      list = val.results;\n      console.log(list);\n      let i = 0;\n      let cards = list.map((val) => {\n        return <MyCard\n                  key={i++}\n                  id={val.id}\n                  src={val.images[0].image}\n                  title={val.title.toUpperCase()}\n                  date={val.dates[0].start_Date ? val.dates[0].start_Date.replace(/\\-/g, '.').replace(/T/g, '   '): 'Идёт круглый год'}\n                  description={val.description.replace('<p>', '').replace('</p>', '')}\n                />\n      })\n      this.setState({cards: cards});\n    });\n  /*  let list = [];\n    let that = this;\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://justgonsk.azurewebsites.net/api/Test');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.send();\n\n    xhr.onreadystatechange = function() {\n      if (this.readyState != 4) return;\n      if (this.status != 200) {\n        alert( 'ошибка: ' + (this.status ? this.statusText : 'запрос не удался') );\n        return;\n      }\n      list = JSON.parse(this.responseText);\n      let i = 0;\n      let prom = new Promise((res, rej) => {\n        let cards = list.results.map(val => {\n          return  <Card\n                    key={i++}\n                    src={val.images[0].image}\n                    title={val.title.toUpperCase()}\n                    date={val.dates[0].start_Date ? val.dates[0].start_Date.replace(/\\-/g, '.').replace(/T/g, '   '): \"Идёт сейчас\"}\n                    description={val.description.replace('<p>', '').replace('</p>', '')}\n                  />\n        });\n        res(cards);\n      });\n\n\n      prom.then(val => {\n        console.log(val);\n        that.setState({cards: val});\n      });*/\n\n}\n\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n      { this.state.cards || <MyCard />}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Gamburger extends Component {\n\n  render() {\n    return (\n      <img src=\"/hamburger.png\" width='80' height='80' className=\"hamburger\" alt=\"Меню\" onClick={this.props.onChange}/>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nimport ReactDOM from 'react-dom';\n\n\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\n\nexport default class Menu extends Component {\n  state = {\n    left: false,\n  };\n\n  toggleDrawer = (open) => () => {\n    this.setState({\n      left: open,\n    });\n  };\n\n  render() {\n    const sideList = (\n      <div>\n        <List>\n          {['Список', 'Карта'].map((text, index) => (\n\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n    const fullList = (\n      <div>\n        <List>\n          {['Список', 'Карта'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n    return (\n      <div>\n        <MenuIcon onClick={this.toggleDrawer(true)} />\n        <SwipeableDrawer\n          open={this.state.left}\n          onClose={this.toggleDrawer(false)}\n          onOpen={this.toggleDrawer(true)}\n        >\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer(false)}\n            onKeyDown={this.toggleDrawer(false)}\n          >\n            <List>\n            <Link to='/' className='no-style'>\n            <ListItem button >\n              <ListItemText primary='Список' />\n            </ListItem>\n            </Link>\n              <Link to='/map' className='no-style'>\n            <ListItem button >\n              <ListItemText primary='Карта' />\n            </ListItem>\n            </Link>\n            </List>\n\n          </div>\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n/*  constructor (props) {\n    super(props);\n    this.state = {\n      visible: props.visible,\n      className: 'menu__background'\n    };\n\n  }\n\n  click = e => {\n\n    e.target.parentNode.parentNode.parentNode.classList.remove('visible');\n    this.props.changeParentState();\n  }\n  */\n/*\n  shouldComponentUpdate(nextProps, nextState) {\n\n    if(nextProps.visible !== this.state.visible) {\n      this.setState({visible: nextProps.visible});\n      if(this.state.visible) {\n        this.setState({className: 'menu__background visible'});\n      }\n      else {\n        this.setState({className: 'menu__background'});\n      }\n\n\n      return true;\n    }\n    else return false;\n  }\n*/\n/*  <div className={this.state.className} onClick={this.click}>\n    <div className='nav paper'>\n        <ul className='nav__list'>\n          <li onClick={this.click}>\n            <Link className=\"nav__link\" to=\"/\">Список</Link>\n          </li>\n          <li onClick={this.click}>\n            <Link className=\"nav__link\" to=\"/map/\">Карта</Link>\n          </li>\n        </ul>\n      </div>\n    </div>*/\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Gamburger from './Gamburger';\nimport Menu from './Menu';\n/*\n<div className=\"header paper\">\n  <div className=\"center\">\n    <Gamburger onChange={this.props.onChange}/>\n    <div className=\"logo\">JG</div>\n    <div className=\"medium\">Регистрация</div>\n  </div>\n</div>*/\nexport default class Header extends Component {\n\n  render() {\n    return (\n      <AppBar position=\"fixed\">\n       <Toolbar  className=\"header\">\n         <IconButton color=\"inherit\" aria-label=\"Menu\">\n           <Menu />\n         </IconButton>\n         <Typography variant=\"h6\" color=\"inherit\">\n           <i>JG</i>\n         </Typography>\n         <Button color=\"inherit\">Вход</Button>\n       </Toolbar>\n     </AppBar>\n\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n\n  render() {\n    return (\n      <div className=\"footer paper\">\n        <div className=\"center footer__center\">\n          <div className=\"small\">Наша почта:\n          <a href=\"mailto:email@mail.mal\" className=\"mail\">andrey.shilkin2010@yandex.ru</a>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Map extends Component {\n\n  render() {\n    return (\n      <div>\n        Здесь будет карта\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Event extends Component {\n\n  render() {\n    return (\n      <div>\n        ыыы событие\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport MyList from \"./components/List\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Map from \"./components/Map\";\nimport Event from './components/Event';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isMenuVisible: true\n    }\n  }\n\n  stateToggle = () => {\n    this.setState({isMenuVisible: !this.state.isMenuVisible});\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"page\">\n      <Router>\n      <Header/>\n      <div className=\"content\">\n        <Switch>\n          <Route path=\"/\" exact component={MyList} />\n          <Route path=\"/map\" component={Map} />\n          <Route path=\"/event/\" component={Event} />\n        </Switch>\n      </div>\n\n    </Router>\n      <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}